{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["import { AwesomeCordovaNativePlugin } from '@awesome-cordova-plugins/core';\n/**\n * @name Location Accuracy\n * @description\n * This Cordova/Phonegap plugin for Android and iOS to request enabling/changing of Location Services by triggering a native dialog from within the app, avoiding the need for the user to leave your app to change location settings manually.\n * @usage\n * ```typescript\n * import { LocationAccuracy } from '@awesome-cordova-plugins/location-accuracy/ngx';\n *\n * constructor(private locationAccuracy: LocationAccuracy) { }\n *\n * ...\n *\n * this.locationAccuracy.canRequest().then((canRequest: boolean) => {\n *\n *   if(canRequest) {\n *     // the accuracy option will be ignored by iOS\n *     this.locationAccuracy.request(this.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY).then(\n *       () => console.log('Request successful'),\n *       error => console.log('Error requesting location permissions', error)\n *     );\n *   }\n *\n * });\n *\n * ```\n */\nexport declare class LocationAccuracy extends AwesomeCordovaNativePlugin {\n    /**\n     * Convenience constant\n     *\n     * @type {number}\n     */\n    REQUEST_PRIORITY_NO_POWER: number;\n    /**\n     * Convenience constant\n     *\n     * @type {number}\n     */\n    REQUEST_PRIORITY_LOW_POWER: number;\n    /**\n     * Convenience constant\n     *\n     * @type {number}\n     */\n    REQUEST_PRIORITY_BALANCED_POWER_ACCURACY: number;\n    /**\n     * Convenience constant\n     *\n     * @type {number}\n     */\n    REQUEST_PRIORITY_HIGH_ACCURACY: number;\n    /**\n     * Convenience constant\n     *\n     * @type {number}\n     */\n    SUCCESS_SETTINGS_SATISFIED: number;\n    /**\n     * Convenience constant\n     *\n     * @type {number}\n     */\n    SUCCESS_USER_AGREED: number;\n    /**\n     * Convenience constant\n     *\n     * @type {number}\n     */\n    ERROR_ALREADY_REQUESTING: number;\n    /**\n     * Convenience constant\n     *\n     * @type {number}\n     */\n    ERROR_INVALID_ACTION: number;\n    /**\n     * Convenience constant\n     *\n     * @type {number}\n     */\n    ERROR_INVALID_ACCURACY: number;\n    /**\n     * Convenience constant\n     *\n     * @type {number}\n     */\n    ERROR_EXCEPTION: number;\n    /**\n     * Convenience constant\n     *\n     * @type {number}\n     */\n    ERROR_CANNOT_CHANGE_ACCURACY: number;\n    /**\n     * Convenience constant\n     *\n     * @type {number}\n     */\n    ERROR_USER_DISAGREED: number;\n    /**\n     * Convenience constant\n     *\n     * @type {number}\n     */\n    ERROR_GOOGLE_API_CONNECTION_FAILED: number;\n    /**\n     * Indicates if you can request accurate location\n     *\n     * @returns {Promise<boolean>} Returns a promise that resovles with a boolean that indicates if you can request accurate location\n     */\n    canRequest(): Promise<boolean>;\n    /**\n     * Indicates if a request is currently in progress\n     *\n     * @returns {Promise<boolean>} Returns a promise that resolves with a boolean that indicates if a request is currently in progress\n     */\n    isRequesting(): Promise<boolean>;\n    /**\n     * Requests accurate location\n     *\n     * @param accuracy {number} Accuracy, from 0 to 4. You can use the static properties of this class that start with REQUEST_PRIORITY_\n     * @returns {Promise<any>} Returns a promise that resolves on success and rejects if an error occurred\n     */\n    request(accuracy: number): Promise<any>;\n}\n"]}